#[cfg(test)]
use crate::daiji::convert_number;

#[test]
pub fn daiji_tests() {
    assert_eq!(convert_number("0"), "零");
    assert_eq!(convert_number("1"), "壱");
    assert_eq!(convert_number("2"), "弐");
    assert_eq!(convert_number("3"), "参");
    assert_eq!(convert_number("4"), "肆");
    assert_eq!(convert_number("5"), "伍");
    assert_eq!(convert_number("6"), "陸");
    assert_eq!(convert_number("7"), "漆");
    assert_eq!(convert_number("8"), "捌");
    assert_eq!(convert_number("9"), "玖");
    assert_eq!(convert_number("10"), "拾");
    assert_eq!(convert_number("20"), "弐拾");
    assert_eq!(convert_number("22"), "弐拾弐");
    assert_eq!(convert_number("30"), "参拾");
    assert_eq!(convert_number("33"), "参拾参");
    assert_eq!(convert_number("40"), "肆拾");
    assert_eq!(convert_number("44"), "肆拾肆");
    assert_eq!(convert_number("50"), "伍拾");
    assert_eq!(convert_number("55"), "伍拾伍");
    assert_eq!(convert_number("60"), "陸拾");
    assert_eq!(convert_number("66"), "陸拾陸");
    assert_eq!(convert_number("70"), "漆拾");
    assert_eq!(convert_number("77"), "漆拾漆");
    assert_eq!(convert_number("80"), "捌拾");
    assert_eq!(convert_number("88"), "捌拾捌");
    assert_eq!(convert_number("90"), "玖拾");
    assert_eq!(convert_number("99"), "玖拾玖");
    assert_eq!(convert_number("100"), "佰");
    assert_eq!(convert_number("111"), "佰拾壱");
    assert_eq!(convert_number("200"), "弐佰");
    assert_eq!(convert_number("222"), "弐佰弐拾弐");
    assert_eq!(convert_number("300"), "参佰");
    assert_eq!(convert_number("333"), "参佰参拾参");
    assert_eq!(convert_number("400"), "肆佰");
    assert_eq!(convert_number("444"), "肆佰肆拾肆");
    assert_eq!(convert_number("500"), "伍佰");
    assert_eq!(convert_number("555"), "伍佰伍拾伍");
    assert_eq!(convert_number("600"), "陸佰");
    assert_eq!(convert_number("666"), "陸佰陸拾陸");
    assert_eq!(convert_number("700"), "漆佰");
    assert_eq!(convert_number("777"), "漆佰漆拾漆");
    assert_eq!(convert_number("800"), "捌佰");
    assert_eq!(convert_number("888"), "捌佰捌拾捌");
    assert_eq!(convert_number("900"), "玖佰");
    assert_eq!(convert_number("999"), "玖佰玖拾玖");
    assert_eq!(convert_number("1000"), "阡");
    assert_eq!(convert_number("1010"), "阡拾");
    assert_eq!(convert_number("1111"), "阡佰拾壱");
    assert_eq!(convert_number("2000"), "弐阡");
    assert_eq!(convert_number("2020"), "弐阡弐拾");
    assert_eq!(convert_number("2222"), "弐阡弐佰弐拾弐");
    assert_eq!(convert_number("3000"), "参阡");
    assert_eq!(convert_number("3030"), "参阡参拾");
    assert_eq!(convert_number("3333"), "参阡参佰参拾参");
    assert_eq!(convert_number("4000"), "肆阡");
    assert_eq!(convert_number("4040"), "肆阡肆拾");
    assert_eq!(convert_number("4444"), "肆阡肆佰肆拾肆");
    assert_eq!(convert_number("5000"), "伍阡");
    assert_eq!(convert_number("5050"), "伍阡伍拾");
    assert_eq!(convert_number("5555"), "伍阡伍佰伍拾伍");
    assert_eq!(convert_number("6000"), "陸阡");
    assert_eq!(convert_number("6060"), "陸阡陸拾");
    assert_eq!(convert_number("6666"), "陸阡陸佰陸拾陸");
    assert_eq!(convert_number("7000"), "漆阡");
    assert_eq!(convert_number("7070"), "漆阡漆拾");
    assert_eq!(convert_number("7777"), "漆阡漆佰漆拾漆");
    assert_eq!(convert_number("8000"), "捌阡");
    assert_eq!(convert_number("8080"), "捌阡捌拾");
    assert_eq!(convert_number("8888"), "捌阡捌佰捌拾捌");
    assert_eq!(convert_number("9000"), "玖阡");
    assert_eq!(convert_number("9090"), "玖阡玖拾");
    assert_eq!(convert_number("9999"), "玖阡玖佰玖拾玖");
    assert_eq!(convert_number("10000"), "壱萬");
    assert_eq!(convert_number("11111"), "壱萬壱阡佰拾壱");
    assert_eq!(convert_number("20000"), "弐萬");
    assert_eq!(convert_number("22222"), "弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("30000"), "参萬");
    assert_eq!(convert_number("33333"), "参萬参阡参佰参拾参");
    assert_eq!(convert_number("40000"), "肆萬");
    assert_eq!(convert_number("44444"), "肆萬肆阡肆佰肆拾肆");
    assert_eq!(convert_number("50000"), "伍萬");
    assert_eq!(convert_number("55555"), "伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("60000"), "陸萬");
    assert_eq!(convert_number("66666"), "陸萬陸阡陸佰陸拾陸");
    assert_eq!(convert_number("70000"), "漆萬");
    assert_eq!(convert_number("77777"), "漆萬漆阡漆佰漆拾漆");
    assert_eq!(convert_number("80000"), "捌萬");
    assert_eq!(convert_number("88888"), "捌萬捌阡捌佰捌拾捌");
    assert_eq!(convert_number("90000"), "玖萬");
    assert_eq!(convert_number("99999"), "玖萬玖阡玖佰玖拾玖");
    assert_eq!(convert_number("100000"), "拾萬");
    assert_eq!(convert_number("100001"), "拾萬壱");
    assert_eq!(convert_number("100100"), "拾萬佰");
    assert_eq!(convert_number("101010"), "拾萬壱阡拾");
    assert_eq!(convert_number("111111"), "拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("200000"), "弐拾萬");
    assert_eq!(convert_number("200002"), "弐拾萬弐");
    assert_eq!(convert_number("200200"), "弐拾萬弐佰");
    assert_eq!(convert_number("202020"), "弐拾萬弐阡弐拾");
    assert_eq!(convert_number("222222"), "弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("300000"), "参拾萬");
    assert_eq!(convert_number("300003"), "参拾萬参");
    assert_eq!(convert_number("300300"), "参拾萬参佰");
    assert_eq!(convert_number("303030"), "参拾萬参阡参拾");
    assert_eq!(convert_number("333333"), "参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("400000"), "肆拾萬");
    assert_eq!(convert_number("400004"), "肆拾萬肆");
    assert_eq!(convert_number("400400"), "肆拾萬肆佰");
    assert_eq!(convert_number("404040"), "肆拾萬肆阡肆拾");
    assert_eq!(convert_number("444444"), "肆拾肆萬肆阡肆佰肆拾肆");
    assert_eq!(convert_number("500000"), "伍拾萬");
    assert_eq!(convert_number("500005"), "伍拾萬伍");
    assert_eq!(convert_number("500500"), "伍拾萬伍佰");
    assert_eq!(convert_number("505050"), "伍拾萬伍阡伍拾");
    assert_eq!(convert_number("555555"), "伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("600000"), "陸拾萬");
    assert_eq!(convert_number("600006"), "陸拾萬陸");
    assert_eq!(convert_number("600600"), "陸拾萬陸佰");
    assert_eq!(convert_number("606060"), "陸拾萬陸阡陸拾");
    assert_eq!(convert_number("666666"), "陸拾陸萬陸阡陸佰陸拾陸");
    assert_eq!(convert_number("700000"), "漆拾萬");
    assert_eq!(convert_number("700007"), "漆拾萬漆");
    assert_eq!(convert_number("700700"), "漆拾萬漆佰");
    assert_eq!(convert_number("707070"), "漆拾萬漆阡漆拾");
    assert_eq!(convert_number("777777"), "漆拾漆萬漆阡漆佰漆拾漆");
    assert_eq!(convert_number("800000"), "捌拾萬");
    assert_eq!(convert_number("800008"), "捌拾萬捌");
    assert_eq!(convert_number("800800"), "捌拾萬捌佰");
    assert_eq!(convert_number("808080"), "捌拾萬捌阡捌拾");
    assert_eq!(convert_number("888888"), "捌拾捌萬捌阡捌佰捌拾捌");
    assert_eq!(convert_number("900000"), "玖拾萬");
    assert_eq!(convert_number("900009"), "玖拾萬玖");
    assert_eq!(convert_number("900900"), "玖拾萬玖佰");
    assert_eq!(convert_number("909090"), "玖拾萬玖阡玖拾");
    assert_eq!(convert_number("999999"), "玖拾玖萬玖阡玖佰玖拾玖");
    assert_eq!(convert_number("1000000"), "佰萬");
    assert_eq!(convert_number("1111111"), "佰拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("2222222"), "弐佰弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("3333333"), "参佰参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("4444444"), "肆佰肆拾肆萬肆阡肆佰肆拾肆");
    assert_eq!(convert_number("5555555"), "伍佰伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("6666666"), "陸佰陸拾陸萬陸阡陸佰陸拾陸");
    assert_eq!(convert_number("7777777"), "漆佰漆拾漆萬漆阡漆佰漆拾漆");
    assert_eq!(convert_number("8888888"), "捌佰捌拾捌萬捌阡捌佰捌拾捌");
    assert_eq!(convert_number("9999999"), "玖佰玖拾玖萬玖阡玖佰玖拾玖");
    assert_eq!(convert_number("10000000"), "壱阡萬");
    assert_eq!(convert_number("10000001"), "壱阡萬壱");
    assert_eq!(convert_number("10001000"), "壱阡萬壱阡");
    assert_eq!(convert_number("10101010"), "壱阡拾萬壱阡拾");
    assert_eq!(convert_number("11111111"), "壱阡佰拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("20000002"), "弐阡萬弐");
    assert_eq!(convert_number("20002000"), "弐阡萬弐阡");
    assert_eq!(convert_number("20202020"), "弐阡弐拾萬弐阡弐拾");
    assert_eq!(convert_number("22222222"), "弐阡弐佰弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("30000003"), "参阡萬参");
    assert_eq!(convert_number("30003000"), "参阡萬参阡");
    assert_eq!(convert_number("30303030"), "参阡参拾萬参阡参拾");
    assert_eq!(convert_number("33333333"), "参阡参佰参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("40000004"), "肆阡萬肆");
    assert_eq!(convert_number("40004000"), "肆阡萬肆阡");
    assert_eq!(convert_number("40404040"), "肆阡肆拾萬肆阡肆拾");
    assert_eq!(convert_number("44444444"), "肆阡肆佰肆拾肆萬肆阡肆佰肆拾肆");
    assert_eq!(convert_number("50000005"), "伍阡萬伍");
    assert_eq!(convert_number("50005000"), "伍阡萬伍阡");
    assert_eq!(convert_number("50505050"), "伍阡伍拾萬伍阡伍拾");
    assert_eq!(convert_number("55555555"), "伍阡伍佰伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("60000006"), "陸阡萬陸");
    assert_eq!(convert_number("60006000"), "陸阡萬陸阡");
    assert_eq!(convert_number("60606060"), "陸阡陸拾萬陸阡陸拾");
    assert_eq!(convert_number("66666666"), "陸阡陸佰陸拾陸萬陸阡陸佰陸拾陸");
    assert_eq!(convert_number("70000007"), "漆阡萬漆");
    assert_eq!(convert_number("70007000"), "漆阡萬漆阡");
    assert_eq!(convert_number("70707070"), "漆阡漆拾萬漆阡漆拾");
    assert_eq!(convert_number("77777777"), "漆阡漆佰漆拾漆萬漆阡漆佰漆拾漆");
    assert_eq!(convert_number("80000008"), "捌阡萬捌");
    assert_eq!(convert_number("80008000"), "捌阡萬捌阡");
    assert_eq!(convert_number("80808080"), "捌阡捌拾萬捌阡捌拾");
    assert_eq!(convert_number("88888888"), "捌阡捌佰捌拾捌萬捌阡捌佰捌拾捌");
    assert_eq!(convert_number("90000009"), "玖阡萬玖");
    assert_eq!(convert_number("90009000"), "玖阡萬玖阡");
    assert_eq!(convert_number("90909090"), "玖阡玖拾萬玖阡玖拾");
    assert_eq!(convert_number("99999999"), "玖阡玖佰玖拾玖萬玖阡玖佰玖拾玖");
    assert_eq!(convert_number("100000000"), "壱億");
    assert_eq!(convert_number("100001001"), "壱億壱阡壱");
    assert_eq!(convert_number("100100100"), "壱億拾萬佰");
    assert_eq!(convert_number("111111111"), "壱億壱阡佰拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("200002002"), "弐億弐阡弐");
    assert_eq!(convert_number("200200200"), "弐億弐拾萬弐佰");
    assert_eq!(convert_number("222222222"), "弐億弐阡弐佰弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("300003003"), "参億参阡参");
    assert_eq!(convert_number("300300300"), "参億参拾萬参佰");
    assert_eq!(convert_number("333333333"), "参億参阡参佰参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("400004004"), "肆億肆阡肆");
    assert_eq!(convert_number("400400400"), "肆億肆拾萬肆佰");
    assert_eq!(convert_number("444444444"), "肆億肆阡肆佰肆拾肆萬肆阡肆佰肆拾肆");
    assert_eq!(convert_number("500005005"), "伍億伍阡伍");
    assert_eq!(convert_number("500500500"), "伍億伍拾萬伍佰");
    assert_eq!(convert_number("555555555"), "伍億伍阡伍佰伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("600006006"), "陸億陸阡陸");
    assert_eq!(convert_number("600600600"), "陸億陸拾萬陸佰");
    assert_eq!(convert_number("666666666"), "陸億陸阡陸佰陸拾陸萬陸阡陸佰陸拾陸");
    assert_eq!(convert_number("700007007"), "漆億漆阡漆");
    assert_eq!(convert_number("700700700"), "漆億漆拾萬漆佰");
    assert_eq!(convert_number("777777777"), "漆億漆阡漆佰漆拾漆萬漆阡漆佰漆拾漆");
    assert_eq!(convert_number("800008008"), "捌億捌阡捌");
    assert_eq!(convert_number("800800800"), "捌億捌拾萬捌佰");
    assert_eq!(convert_number("888888888"), "捌億捌阡捌佰捌拾捌萬捌阡捌佰捌拾捌");
    assert_eq!(convert_number("900009009"), "玖億玖阡玖");
    assert_eq!(convert_number("900900900"), "玖億玖拾萬玖佰");
    assert_eq!(convert_number("999999999"), "玖億玖阡玖佰玖拾玖萬玖阡玖佰玖拾玖");
    assert_eq!(convert_number("1000000000"), "拾億");
    assert_eq!(convert_number("1000000001"), "拾億壱");
    assert_eq!(convert_number("1000010000"), "拾億壱萬");
    assert_eq!(convert_number("1010101010"), "拾億壱阡拾萬壱阡拾");
    assert_eq!(convert_number("1111111111"), "拾壱億壱阡佰拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("2000000002"), "弐拾億弐");
    assert_eq!(convert_number("2000020000"), "弐拾億弐萬");
    assert_eq!(convert_number("2020202020"), "弐拾億弐阡弐拾萬弐阡弐拾");
    assert_eq!(convert_number("2222222222"), "弐拾弐億弐阡弐佰弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("3000000003"), "参拾億参");
    assert_eq!(convert_number("3000030000"), "参拾億参萬");
    assert_eq!(convert_number("3030303030"), "参拾億参阡参拾萬参阡参拾");
    assert_eq!(convert_number("3333333333"), "参拾参億参阡参佰参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("4000000004"), "肆拾億肆");
    assert_eq!(convert_number("4000040000"), "肆拾億肆萬");
    assert_eq!(convert_number("4040404040"), "肆拾億肆阡肆拾萬肆阡肆拾");
    assert_eq!(convert_number("4444444444"), "肆拾肆億肆阡肆佰肆拾肆萬肆阡肆佰肆拾肆");
    assert_eq!(convert_number("5000000005"), "伍拾億伍");
    assert_eq!(convert_number("5000050000"), "伍拾億伍萬");
    assert_eq!(convert_number("5050505050"), "伍拾億伍阡伍拾萬伍阡伍拾");
    assert_eq!(convert_number("5555555555"), "伍拾伍億伍阡伍佰伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("6000000006"), "陸拾億陸");
    assert_eq!(convert_number("6000060000"), "陸拾億陸萬");
    assert_eq!(convert_number("6060606060"), "陸拾億陸阡陸拾萬陸阡陸拾");
    assert_eq!(convert_number("6666666666"), "陸拾陸億陸阡陸佰陸拾陸萬陸阡陸佰陸拾陸");
    assert_eq!(convert_number("7000000007"), "漆拾億漆");
    assert_eq!(convert_number("7000070000"), "漆拾億漆萬");
    assert_eq!(convert_number("7070707070"), "漆拾億漆阡漆拾萬漆阡漆拾");
    assert_eq!(convert_number("7777777777"), "漆拾漆億漆阡漆佰漆拾漆萬漆阡漆佰漆拾漆");
    assert_eq!(convert_number("8000000008"), "捌拾億捌");
    assert_eq!(convert_number("8000080000"), "捌拾億捌萬");
    assert_eq!(convert_number("8080808080"), "捌拾億捌阡捌拾萬捌阡捌拾");
    assert_eq!(convert_number("8888888888"), "捌拾捌億捌阡捌佰捌拾捌萬捌阡捌佰捌拾捌");
    assert_eq!(convert_number("9000000009"), "玖拾億玖");
    assert_eq!(convert_number("9000090000"), "玖拾億玖萬");
    assert_eq!(convert_number("9090909090"), "玖拾億玖阡玖拾萬玖阡玖拾");
    assert_eq!(convert_number("9999999999"), "玖拾玖億玖阡玖佰玖拾玖萬玖阡玖佰玖拾玖");
    assert_eq!(convert_number("10000000000"), "佰億");
    assert_eq!(convert_number("11111111111"), "佰拾壱億壱阡佰拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("22222222222"), "弐佰弐拾弐億弐阡弐佰弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("33333333333"), "参佰参拾参億参阡参佰参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("44444444444"), "肆佰肆拾肆億肆阡肆佰肆拾肆萬肆阡肆佰肆拾肆");
    assert_eq!(convert_number("55555555555"), "伍佰伍拾伍億伍阡伍佰伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("66666666666"), "陸佰陸拾陸億陸阡陸佰陸拾陸萬陸阡陸佰陸拾陸");
    assert_eq!(convert_number("77777777777"), "漆佰漆拾漆億漆阡漆佰漆拾漆萬漆阡漆佰漆拾漆");
    assert_eq!(convert_number("88888888888"), "捌佰捌拾捌億捌阡捌佰捌拾捌萬捌阡捌佰捌拾捌");
    assert_eq!(convert_number("99999999999"), "玖佰玖拾玖億玖阡玖佰玖拾玖萬玖阡玖佰玖拾玖");
    assert_eq!(convert_number("100000000000"), "壱阡億");
    assert_eq!(convert_number("100000010001"), "壱阡億壱萬壱");
    assert_eq!(convert_number("100000100000"), "壱阡億拾萬");
    assert_eq!(convert_number("100001001001"), "壱阡億佰萬壱阡壱");
    assert_eq!(convert_number("100010001000"), "壱阡億壱阡萬壱阡");
    assert_eq!(convert_number("100100100100"), "壱阡壱億拾萬佰");
    assert_eq!(convert_number("101010101010"), "壱阡拾億壱阡拾萬壱阡拾");
    assert_eq!(convert_number("111111111111"), "壱阡佰拾壱億壱阡佰拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("200000020002"), "弐阡億弐萬弐");
    assert_eq!(convert_number("200000200000"), "弐阡億弐拾萬");
    assert_eq!(convert_number("200002002002"), "弐阡億弐佰萬弐阡弐");
    assert_eq!(convert_number("200020002000"), "弐阡億弐阡萬弐阡");
    assert_eq!(convert_number("200200200200"), "弐阡弐億弐拾萬弐佰");
    assert_eq!(convert_number("202020202020"), "弐阡弐拾億弐阡弐拾萬弐阡弐拾");
    assert_eq!(convert_number("222222222222"), "弐阡弐佰弐拾弐億弐阡弐佰弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("300000030003"), "参阡億参萬参");
    assert_eq!(convert_number("300000300000"), "参阡億参拾萬");
    assert_eq!(convert_number("300003003003"), "参阡億参佰萬参阡参");
    assert_eq!(convert_number("300030003000"), "参阡億参阡萬参阡");
    assert_eq!(convert_number("300300300300"), "参阡参億参拾萬参佰");
    assert_eq!(convert_number("303030303030"), "参阡参拾億参阡参拾萬参阡参拾");
    assert_eq!(convert_number("333333333333"), "参阡参佰参拾参億参阡参佰参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("400000040004"), "肆阡億肆萬肆");
    assert_eq!(convert_number("400000400000"), "肆阡億肆拾萬");
    assert_eq!(convert_number("400004004004"), "肆阡億肆佰萬肆阡肆");
    assert_eq!(convert_number("400040004000"), "肆阡億肆阡萬肆阡");
    assert_eq!(convert_number("400400400400"), "肆阡肆億肆拾萬肆佰");
    assert_eq!(convert_number("404040404040"), "肆阡肆拾億肆阡肆拾萬肆阡肆拾");
    assert_eq!(convert_number("444444444444"), "肆阡肆佰肆拾肆億肆阡肆佰肆拾肆萬肆阡肆佰肆拾肆");
    assert_eq!(convert_number("500000050005"), "伍阡億伍萬伍");
    assert_eq!(convert_number("500000500000"), "伍阡億伍拾萬");
    assert_eq!(convert_number("500005005005"), "伍阡億伍佰萬伍阡伍");
    assert_eq!(convert_number("500050005000"), "伍阡億伍阡萬伍阡");
    assert_eq!(convert_number("500500500500"), "伍阡伍億伍拾萬伍佰");
    assert_eq!(convert_number("505050505050"), "伍阡伍拾億伍阡伍拾萬伍阡伍拾");
    assert_eq!(convert_number("555555555555"), "伍阡伍佰伍拾伍億伍阡伍佰伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("600000060006"), "陸阡億陸萬陸");
    assert_eq!(convert_number("600000600000"), "陸阡億陸拾萬");
    assert_eq!(convert_number("600006006006"), "陸阡億陸佰萬陸阡陸");
    assert_eq!(convert_number("600060006000"), "陸阡億陸阡萬陸阡");
    assert_eq!(convert_number("600600600600"), "陸阡陸億陸拾萬陸佰");
    assert_eq!(convert_number("606060606060"), "陸阡陸拾億陸阡陸拾萬陸阡陸拾");
    assert_eq!(convert_number("666666666666"), "陸阡陸佰陸拾陸億陸阡陸佰陸拾陸萬陸阡陸佰陸拾陸");
    assert_eq!(convert_number("700000070007"), "漆阡億漆萬漆");
    assert_eq!(convert_number("700000700000"), "漆阡億漆拾萬");
    assert_eq!(convert_number("700007007007"), "漆阡億漆佰萬漆阡漆");
    assert_eq!(convert_number("700070007000"), "漆阡億漆阡萬漆阡");
    assert_eq!(convert_number("700700700700"), "漆阡漆億漆拾萬漆佰");
    assert_eq!(convert_number("707070707070"), "漆阡漆拾億漆阡漆拾萬漆阡漆拾");
    assert_eq!(convert_number("777777777777"), "漆阡漆佰漆拾漆億漆阡漆佰漆拾漆萬漆阡漆佰漆拾漆");
    assert_eq!(convert_number("800000080008"), "捌阡億捌萬捌");
    assert_eq!(convert_number("800000800000"), "捌阡億捌拾萬");
    assert_eq!(convert_number("800008008008"), "捌阡億捌佰萬捌阡捌");
    assert_eq!(convert_number("800080008000"), "捌阡億捌阡萬捌阡");
    assert_eq!(convert_number("800800800800"), "捌阡捌億捌拾萬捌佰");
    assert_eq!(convert_number("808080808080"), "捌阡捌拾億捌阡捌拾萬捌阡捌拾");
    assert_eq!(convert_number("888888888888"), "捌阡捌佰捌拾捌億捌阡捌佰捌拾捌萬捌阡捌佰捌拾捌");
    assert_eq!(convert_number("900000090009"), "玖阡億玖萬玖");
    assert_eq!(convert_number("900000900000"), "玖阡億玖拾萬");
    assert_eq!(convert_number("900009009009"), "玖阡億玖佰萬玖阡玖");
    assert_eq!(convert_number("900090009000"), "玖阡億玖阡萬玖阡");
    assert_eq!(convert_number("900900900900"), "玖阡玖億玖拾萬玖佰");
    assert_eq!(convert_number("909090909090"), "玖阡玖拾億玖阡玖拾萬玖阡玖拾");
    assert_eq!(convert_number("999999999999"), "玖阡玖佰玖拾玖億玖阡玖佰玖拾玖萬玖阡玖佰玖拾玖");
    assert_eq!(convert_number("1000000000000"), "壱兆");
    assert_eq!(convert_number("1111111111111"), "壱兆壱阡佰拾壱億壱阡佰拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("2222222222222"), "弐兆弐阡弐佰弐拾弐億弐阡弐佰弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("3333333333333"), "参兆参阡参佰参拾参億参阡参佰参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("4444444444444"), "肆兆肆阡肆佰肆拾肆億肆阡肆佰肆拾肆萬肆阡肆佰肆拾肆");
    assert_eq!(convert_number("5555555555555"), "伍兆伍阡伍佰伍拾伍億伍阡伍佰伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("6666666666666"), "陸兆陸阡陸佰陸拾陸億陸阡陸佰陸拾陸萬陸阡陸佰陸拾陸");
    assert_eq!(convert_number("7777777777777"), "漆兆漆阡漆佰漆拾漆億漆阡漆佰漆拾漆萬漆阡漆佰漆拾漆");
    assert_eq!(convert_number("8888888888888"), "捌兆捌阡捌佰捌拾捌億捌阡捌佰捌拾捌萬捌阡捌佰捌拾捌");
    assert_eq!(convert_number("9999999999999"), "玖兆玖阡玖佰玖拾玖億玖阡玖佰玖拾玖萬玖阡玖佰玖拾玖");
    assert_eq!(convert_number("10000000000000"), "拾兆");
    assert_eq!(convert_number("10101010101010"), "拾兆壱阡拾億壱阡拾萬壱阡拾");
    assert_eq!(convert_number("11111111111111"), "拾壱兆壱阡佰拾壱億壱阡佰拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("20202020202020"), "弐拾兆弐阡弐拾億弐阡弐拾萬弐阡弐拾");
    assert_eq!(convert_number("22222222222222"), "弐拾弐兆弐阡弐佰弐拾弐億弐阡弐佰弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("30303030303030"), "参拾兆参阡参拾億参阡参拾萬参阡参拾");
    assert_eq!(convert_number("33333333333333"), "参拾参兆参阡参佰参拾参億参阡参佰参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("40404040404040"), "肆拾兆肆阡肆拾億肆阡肆拾萬肆阡肆拾");
    assert_eq!(convert_number("44444444444444"), "肆拾肆兆肆阡肆佰肆拾肆億肆阡肆佰肆拾肆萬肆阡肆佰肆拾肆");
    assert_eq!(convert_number("50505050505050"), "伍拾兆伍阡伍拾億伍阡伍拾萬伍阡伍拾");
    assert_eq!(convert_number("55555555555555"), "伍拾伍兆伍阡伍佰伍拾伍億伍阡伍佰伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("60606060606060"), "陸拾兆陸阡陸拾億陸阡陸拾萬陸阡陸拾");
    assert_eq!(convert_number("66666666666666"), "陸拾陸兆陸阡陸佰陸拾陸億陸阡陸佰陸拾陸萬陸阡陸佰陸拾陸");
    assert_eq!(convert_number("70707070707070"), "漆拾兆漆阡漆拾億漆阡漆拾萬漆阡漆拾");
    assert_eq!(convert_number("77777777777777"), "漆拾漆兆漆阡漆佰漆拾漆億漆阡漆佰漆拾漆萬漆阡漆佰漆拾漆");
    assert_eq!(convert_number("80808080808080"), "捌拾兆捌阡捌拾億捌阡捌拾萬捌阡捌拾");
    assert_eq!(convert_number("88888888888888"), "捌拾捌兆捌阡捌佰捌拾捌億捌阡捌佰捌拾捌萬捌阡捌佰捌拾捌");
    assert_eq!(convert_number("90909090909090"), "玖拾兆玖阡玖拾億玖阡玖拾萬玖阡玖拾");
    assert_eq!(convert_number("99999999999999"), "玖拾玖兆玖阡玖佰玖拾玖億玖阡玖佰玖拾玖萬玖阡玖佰玖拾玖");
    assert_eq!(convert_number("100000000000000"), "佰兆");
    assert_eq!(convert_number("100000000100001"), "佰兆拾萬壱");
    assert_eq!(convert_number("100001000010000"), "佰兆拾億壱萬");
    assert_eq!(convert_number("100001001001001"), "佰兆拾億佰萬壱阡壱");
    assert_eq!(convert_number("100100100100100"), "佰兆壱阡壱億拾萬佰");
    assert_eq!(convert_number("111111111111111"), "佰拾壱兆壱阡佰拾壱億壱阡佰拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("200000000200002"), "弐佰兆弐拾萬弐");
    assert_eq!(convert_number("200002000020000"), "弐佰兆弐拾億弐萬");
    assert_eq!(convert_number("200002002002002"), "弐佰兆弐拾億弐佰萬弐阡弐");
    assert_eq!(convert_number("200200200200200"), "弐佰兆弐阡弐億弐拾萬弐佰");
    assert_eq!(convert_number("222222222222222"), "弐佰弐拾弐兆弐阡弐佰弐拾弐億弐阡弐佰弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("300000000300003"), "参佰兆参拾萬参");
    assert_eq!(convert_number("300003000030000"), "参佰兆参拾億参萬");
    assert_eq!(convert_number("300003003003003"), "参佰兆参拾億参佰萬参阡参");
    assert_eq!(convert_number("300300300300300"), "参佰兆参阡参億参拾萬参佰");
    assert_eq!(convert_number("333333333333333"), "参佰参拾参兆参阡参佰参拾参億参阡参佰参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("400000000400004"), "肆佰兆肆拾萬肆");
    assert_eq!(convert_number("400004000040000"), "肆佰兆肆拾億肆萬");
    assert_eq!(convert_number("400004004004004"), "肆佰兆肆拾億肆佰萬肆阡肆");
    assert_eq!(convert_number("400400400400400"), "肆佰兆肆阡肆億肆拾萬肆佰");
    assert_eq!(convert_number("444444444444444"), "肆佰肆拾肆兆肆阡肆佰肆拾肆億肆阡肆佰肆拾肆萬肆阡肆佰肆拾肆");
    assert_eq!(convert_number("500000000500005"), "伍佰兆伍拾萬伍");
    assert_eq!(convert_number("500005000050000"), "伍佰兆伍拾億伍萬");
    assert_eq!(convert_number("500005005005005"), "伍佰兆伍拾億伍佰萬伍阡伍");
    assert_eq!(convert_number("500500500500500"), "伍佰兆伍阡伍億伍拾萬伍佰");
    assert_eq!(convert_number("555555555555555"), "伍佰伍拾伍兆伍阡伍佰伍拾伍億伍阡伍佰伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("600000000600006"), "陸佰兆陸拾萬陸");
    assert_eq!(convert_number("600006000060000"), "陸佰兆陸拾億陸萬");
    assert_eq!(convert_number("600006006006006"), "陸佰兆陸拾億陸佰萬陸阡陸");
    assert_eq!(convert_number("600600600600600"), "陸佰兆陸阡陸億陸拾萬陸佰");
    assert_eq!(convert_number("666666666666666"), "陸佰陸拾陸兆陸阡陸佰陸拾陸億陸阡陸佰陸拾陸萬陸阡陸佰陸拾陸");
    assert_eq!(convert_number("700000000700007"), "漆佰兆漆拾萬漆");
    assert_eq!(convert_number("700007000070000"), "漆佰兆漆拾億漆萬");
    assert_eq!(convert_number("700007007007007"), "漆佰兆漆拾億漆佰萬漆阡漆");
    assert_eq!(convert_number("700700700700700"), "漆佰兆漆阡漆億漆拾萬漆佰");
    assert_eq!(convert_number("777777777777777"), "漆佰漆拾漆兆漆阡漆佰漆拾漆億漆阡漆佰漆拾漆萬漆阡漆佰漆拾漆");
    assert_eq!(convert_number("800000000800008"), "捌佰兆捌拾萬捌");
    assert_eq!(convert_number("800008000080000"), "捌佰兆捌拾億捌萬");
    assert_eq!(convert_number("800008008008008"), "捌佰兆捌拾億捌佰萬捌阡捌");
    assert_eq!(convert_number("800800800800800"), "捌佰兆捌阡捌億捌拾萬捌佰");
    assert_eq!(convert_number("888888888888888"), "捌佰捌拾捌兆捌阡捌佰捌拾捌億捌阡捌佰捌拾捌萬捌阡捌佰捌拾捌");
    assert_eq!(convert_number("900000000900009"), "玖佰兆玖拾萬玖");
    assert_eq!(convert_number("900009000090000"), "玖佰兆玖拾億玖萬");
    assert_eq!(convert_number("900009009009009"), "玖佰兆玖拾億玖佰萬玖阡玖");
    assert_eq!(convert_number("900900900900900"), "玖佰兆玖阡玖億玖拾萬玖佰");
    assert_eq!(convert_number("999999999999999"), "玖佰玖拾玖兆玖阡玖佰玖拾玖億玖阡玖佰玖拾玖萬玖阡玖佰玖拾玖");
    assert_eq!(convert_number("1000000000000000"), "壱阡兆");
    assert_eq!(convert_number("1000000100010001"), "壱阡兆壱億壱萬壱");
    assert_eq!(convert_number("1000100010001000"), "壱阡兆壱阡億壱阡萬壱阡");
    assert_eq!(convert_number("1010101010101010"), "壱阡拾兆壱阡拾億壱阡拾萬壱阡拾");
    assert_eq!(convert_number("1111111111111111"), "壱阡佰拾壱兆壱阡佰拾壱億壱阡佰拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("2000000200020002"), "弐阡兆弐億弐萬弐");
    assert_eq!(convert_number("2000200020002000"), "弐阡兆弐阡億弐阡萬弐阡");
    assert_eq!(convert_number("2020202020202020"), "弐阡弐拾兆弐阡弐拾億弐阡弐拾萬弐阡弐拾");
    assert_eq!(convert_number("2222222222222222"), "弐阡弐佰弐拾弐兆弐阡弐佰弐拾弐億弐阡弐佰弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("3000000300030003"), "参阡兆参億参萬参");
    assert_eq!(convert_number("3000300030003000"), "参阡兆参阡億参阡萬参阡");
    assert_eq!(convert_number("3030303030303030"), "参阡参拾兆参阡参拾億参阡参拾萬参阡参拾");
    assert_eq!(convert_number("3333333333333333"), "参阡参佰参拾参兆参阡参佰参拾参億参阡参佰参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("4000000400040004"), "肆阡兆肆億肆萬肆");
    assert_eq!(convert_number("4000400040004000"), "肆阡兆肆阡億肆阡萬肆阡");
    assert_eq!(convert_number("4040404040404040"), "肆阡肆拾兆肆阡肆拾億肆阡肆拾萬肆阡肆拾");
    assert_eq!(convert_number("4444444444444444"), "肆阡肆佰肆拾肆兆肆阡肆佰肆拾肆億肆阡肆佰肆拾肆萬肆阡肆佰肆拾肆");
    assert_eq!(convert_number("5000000500050005"), "伍阡兆伍億伍萬伍");
    assert_eq!(convert_number("5000500050005000"), "伍阡兆伍阡億伍阡萬伍阡");
    assert_eq!(convert_number("5050505050505050"), "伍阡伍拾兆伍阡伍拾億伍阡伍拾萬伍阡伍拾");
    assert_eq!(convert_number("5555555555555555"), "伍阡伍佰伍拾伍兆伍阡伍佰伍拾伍億伍阡伍佰伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("6000000600060006"), "陸阡兆陸億陸萬陸");
    assert_eq!(convert_number("6000600060006000"), "陸阡兆陸阡億陸阡萬陸阡");
    assert_eq!(convert_number("6060606060606060"), "陸阡陸拾兆陸阡陸拾億陸阡陸拾萬陸阡陸拾");
    assert_eq!(convert_number("6666666666666666"), "陸阡陸佰陸拾陸兆陸阡陸佰陸拾陸億陸阡陸佰陸拾陸萬陸阡陸佰陸拾陸");
    assert_eq!(convert_number("7000000700070007"), "漆阡兆漆億漆萬漆");
    assert_eq!(convert_number("7000700070007000"), "漆阡兆漆阡億漆阡萬漆阡");
    assert_eq!(convert_number("7070707070707070"), "漆阡漆拾兆漆阡漆拾億漆阡漆拾萬漆阡漆拾");
    assert_eq!(convert_number("7777777777777777"), "漆阡漆佰漆拾漆兆漆阡漆佰漆拾漆億漆阡漆佰漆拾漆萬漆阡漆佰漆拾漆");
    assert_eq!(convert_number("8000000800080008"), "捌阡兆捌億捌萬捌");
    assert_eq!(convert_number("8000800080008000"), "捌阡兆捌阡億捌阡萬捌阡");
    assert_eq!(convert_number("8080808080808080"), "捌阡捌拾兆捌阡捌拾億捌阡捌拾萬捌阡捌拾");
    assert_eq!(convert_number("8888888888888888"), "捌阡捌佰捌拾捌兆捌阡捌佰捌拾捌億捌阡捌佰捌拾捌萬捌阡捌佰捌拾捌");
    assert_eq!(convert_number("9000000900090009"), "玖阡兆玖億玖萬玖");
    assert_eq!(convert_number("9000900090009000"), "玖阡兆玖阡億玖阡萬玖阡");
    assert_eq!(convert_number("9090909090909090"), "玖阡玖拾兆玖阡玖拾億玖阡玖拾萬玖阡玖拾");
    assert_eq!(convert_number("9999999999999999"), "玖阡玖佰玖拾玖兆玖阡玖佰玖拾玖億玖阡玖佰玖拾玖萬玖阡玖佰玖拾玖");
}