#[cfg(test)]
use crate::banknote_daiji::convert_number;

#[test]
pub fn banknote_daiji_tests() {
    assert_eq!(convert_number("0"), "零");
    assert_eq!(convert_number("1"), "壱");
    assert_eq!(convert_number("2"), "弐");
    assert_eq!(convert_number("3"), "参");
    assert_eq!(convert_number("4"), "四");
    assert_eq!(convert_number("5"), "伍");
    assert_eq!(convert_number("6"), "六");
    assert_eq!(convert_number("7"), "七");
    assert_eq!(convert_number("8"), "八");
    assert_eq!(convert_number("9"), "九");
    assert_eq!(convert_number("10"), "拾");
    assert_eq!(convert_number("20"), "弐拾");
    assert_eq!(convert_number("22"), "弐拾弐");
    assert_eq!(convert_number("30"), "参拾");
    assert_eq!(convert_number("33"), "参拾参");
    assert_eq!(convert_number("40"), "四拾");
    assert_eq!(convert_number("44"), "四拾四");
    assert_eq!(convert_number("50"), "伍拾");
    assert_eq!(convert_number("55"), "伍拾伍");
    assert_eq!(convert_number("60"), "六拾");
    assert_eq!(convert_number("66"), "六拾六");
    assert_eq!(convert_number("70"), "七拾");
    assert_eq!(convert_number("77"), "七拾七");
    assert_eq!(convert_number("80"), "八拾");
    assert_eq!(convert_number("88"), "八拾八");
    assert_eq!(convert_number("90"), "九拾");
    assert_eq!(convert_number("99"), "九拾九");
    assert_eq!(convert_number("100"), "佰");
    assert_eq!(convert_number("111"), "佰拾壱");
    assert_eq!(convert_number("200"), "弐佰");
    assert_eq!(convert_number("222"), "弐佰弐拾弐");
    assert_eq!(convert_number("300"), "参佰");
    assert_eq!(convert_number("333"), "参佰参拾参");
    assert_eq!(convert_number("400"), "四佰");
    assert_eq!(convert_number("444"), "四佰四拾四");
    assert_eq!(convert_number("500"), "伍佰");
    assert_eq!(convert_number("555"), "伍佰伍拾伍");
    assert_eq!(convert_number("600"), "六佰");
    assert_eq!(convert_number("666"), "六佰六拾六");
    assert_eq!(convert_number("700"), "七佰");
    assert_eq!(convert_number("777"), "七佰七拾七");
    assert_eq!(convert_number("800"), "八佰");
    assert_eq!(convert_number("888"), "八佰八拾八");
    assert_eq!(convert_number("900"), "九佰");
    assert_eq!(convert_number("999"), "九佰九拾九");
    assert_eq!(convert_number("1000"), "阡");
    assert_eq!(convert_number("1010"), "阡拾");
    assert_eq!(convert_number("1111"), "阡佰拾壱");
    assert_eq!(convert_number("2000"), "弐阡");
    assert_eq!(convert_number("2020"), "弐阡弐拾");
    assert_eq!(convert_number("2222"), "弐阡弐佰弐拾弐");
    assert_eq!(convert_number("3000"), "参阡");
    assert_eq!(convert_number("3030"), "参阡参拾");
    assert_eq!(convert_number("3333"), "参阡参佰参拾参");
    assert_eq!(convert_number("4000"), "四阡");
    assert_eq!(convert_number("4040"), "四阡四拾");
    assert_eq!(convert_number("4444"), "四阡四佰四拾四");
    assert_eq!(convert_number("5000"), "伍阡");
    assert_eq!(convert_number("5050"), "伍阡伍拾");
    assert_eq!(convert_number("5555"), "伍阡伍佰伍拾伍");
    assert_eq!(convert_number("6000"), "六阡");
    assert_eq!(convert_number("6060"), "六阡六拾");
    assert_eq!(convert_number("6666"), "六阡六佰六拾六");
    assert_eq!(convert_number("7000"), "七阡");
    assert_eq!(convert_number("7070"), "七阡七拾");
    assert_eq!(convert_number("7777"), "七阡七佰七拾七");
    assert_eq!(convert_number("8000"), "八阡");
    assert_eq!(convert_number("8080"), "八阡八拾");
    assert_eq!(convert_number("8888"), "八阡八佰八拾八");
    assert_eq!(convert_number("9000"), "九阡");
    assert_eq!(convert_number("9090"), "九阡九拾");
    assert_eq!(convert_number("9999"), "九阡九佰九拾九");
    assert_eq!(convert_number("10000"), "壱萬");
    assert_eq!(convert_number("11111"), "壱萬壱阡佰拾壱");
    assert_eq!(convert_number("20000"), "弐萬");
    assert_eq!(convert_number("22222"), "弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("30000"), "参萬");
    assert_eq!(convert_number("33333"), "参萬参阡参佰参拾参");
    assert_eq!(convert_number("40000"), "四萬");
    assert_eq!(convert_number("44444"), "四萬四阡四佰四拾四");
    assert_eq!(convert_number("50000"), "伍萬");
    assert_eq!(convert_number("55555"), "伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("60000"), "六萬");
    assert_eq!(convert_number("66666"), "六萬六阡六佰六拾六");
    assert_eq!(convert_number("70000"), "七萬");
    assert_eq!(convert_number("77777"), "七萬七阡七佰七拾七");
    assert_eq!(convert_number("80000"), "八萬");
    assert_eq!(convert_number("88888"), "八萬八阡八佰八拾八");
    assert_eq!(convert_number("90000"), "九萬");
    assert_eq!(convert_number("99999"), "九萬九阡九佰九拾九");
    assert_eq!(convert_number("100000"), "拾萬");
    assert_eq!(convert_number("100001"), "拾萬壱");
    assert_eq!(convert_number("100100"), "拾萬佰");
    assert_eq!(convert_number("101010"), "拾萬壱阡拾");
    assert_eq!(convert_number("111111"), "拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("200000"), "弐拾萬");
    assert_eq!(convert_number("200002"), "弐拾萬弐");
    assert_eq!(convert_number("200200"), "弐拾萬弐佰");
    assert_eq!(convert_number("202020"), "弐拾萬弐阡弐拾");
    assert_eq!(convert_number("222222"), "弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("300000"), "参拾萬");
    assert_eq!(convert_number("300003"), "参拾萬参");
    assert_eq!(convert_number("300300"), "参拾萬参佰");
    assert_eq!(convert_number("303030"), "参拾萬参阡参拾");
    assert_eq!(convert_number("333333"), "参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("400000"), "四拾萬");
    assert_eq!(convert_number("400004"), "四拾萬四");
    assert_eq!(convert_number("400400"), "四拾萬四佰");
    assert_eq!(convert_number("404040"), "四拾萬四阡四拾");
    assert_eq!(convert_number("444444"), "四拾四萬四阡四佰四拾四");
    assert_eq!(convert_number("500000"), "伍拾萬");
    assert_eq!(convert_number("500005"), "伍拾萬伍");
    assert_eq!(convert_number("500500"), "伍拾萬伍佰");
    assert_eq!(convert_number("505050"), "伍拾萬伍阡伍拾");
    assert_eq!(convert_number("555555"), "伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("600000"), "六拾萬");
    assert_eq!(convert_number("600006"), "六拾萬六");
    assert_eq!(convert_number("600600"), "六拾萬六佰");
    assert_eq!(convert_number("606060"), "六拾萬六阡六拾");
    assert_eq!(convert_number("666666"), "六拾六萬六阡六佰六拾六");
    assert_eq!(convert_number("700000"), "七拾萬");
    assert_eq!(convert_number("700007"), "七拾萬七");
    assert_eq!(convert_number("700700"), "七拾萬七佰");
    assert_eq!(convert_number("707070"), "七拾萬七阡七拾");
    assert_eq!(convert_number("777777"), "七拾七萬七阡七佰七拾七");
    assert_eq!(convert_number("800000"), "八拾萬");
    assert_eq!(convert_number("800008"), "八拾萬八");
    assert_eq!(convert_number("800800"), "八拾萬八佰");
    assert_eq!(convert_number("808080"), "八拾萬八阡八拾");
    assert_eq!(convert_number("888888"), "八拾八萬八阡八佰八拾八");
    assert_eq!(convert_number("900000"), "九拾萬");
    assert_eq!(convert_number("900009"), "九拾萬九");
    assert_eq!(convert_number("900900"), "九拾萬九佰");
    assert_eq!(convert_number("909090"), "九拾萬九阡九拾");
    assert_eq!(convert_number("999999"), "九拾九萬九阡九佰九拾九");
    assert_eq!(convert_number("1000000"), "佰萬");
    assert_eq!(convert_number("1111111"), "佰拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("2222222"), "弐佰弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("3333333"), "参佰参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("4444444"), "四佰四拾四萬四阡四佰四拾四");
    assert_eq!(convert_number("5555555"), "伍佰伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("6666666"), "六佰六拾六萬六阡六佰六拾六");
    assert_eq!(convert_number("7777777"), "七佰七拾七萬七阡七佰七拾七");
    assert_eq!(convert_number("8888888"), "八佰八拾八萬八阡八佰八拾八");
    assert_eq!(convert_number("9999999"), "九佰九拾九萬九阡九佰九拾九");
    assert_eq!(convert_number("10000000"), "壱阡萬");
    assert_eq!(convert_number("10000001"), "壱阡萬壱");
    assert_eq!(convert_number("10001000"), "壱阡萬壱阡");
    assert_eq!(convert_number("10101010"), "壱阡拾萬壱阡拾");
    assert_eq!(convert_number("11111111"), "壱阡佰拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("20000002"), "弐阡萬弐");
    assert_eq!(convert_number("20002000"), "弐阡萬弐阡");
    assert_eq!(convert_number("20202020"), "弐阡弐拾萬弐阡弐拾");
    assert_eq!(convert_number("22222222"), "弐阡弐佰弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("30000003"), "参阡萬参");
    assert_eq!(convert_number("30003000"), "参阡萬参阡");
    assert_eq!(convert_number("30303030"), "参阡参拾萬参阡参拾");
    assert_eq!(convert_number("33333333"), "参阡参佰参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("40000004"), "四阡萬四");
    assert_eq!(convert_number("40004000"), "四阡萬四阡");
    assert_eq!(convert_number("40404040"), "四阡四拾萬四阡四拾");
    assert_eq!(convert_number("44444444"), "四阡四佰四拾四萬四阡四佰四拾四");
    assert_eq!(convert_number("50000005"), "伍阡萬伍");
    assert_eq!(convert_number("50005000"), "伍阡萬伍阡");
    assert_eq!(convert_number("50505050"), "伍阡伍拾萬伍阡伍拾");
    assert_eq!(convert_number("55555555"), "伍阡伍佰伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("60000006"), "六阡萬六");
    assert_eq!(convert_number("60006000"), "六阡萬六阡");
    assert_eq!(convert_number("60606060"), "六阡六拾萬六阡六拾");
    assert_eq!(convert_number("66666666"), "六阡六佰六拾六萬六阡六佰六拾六");
    assert_eq!(convert_number("70000007"), "七阡萬七");
    assert_eq!(convert_number("70007000"), "七阡萬七阡");
    assert_eq!(convert_number("70707070"), "七阡七拾萬七阡七拾");
    assert_eq!(convert_number("77777777"), "七阡七佰七拾七萬七阡七佰七拾七");
    assert_eq!(convert_number("80000008"), "八阡萬八");
    assert_eq!(convert_number("80008000"), "八阡萬八阡");
    assert_eq!(convert_number("80808080"), "八阡八拾萬八阡八拾");
    assert_eq!(convert_number("88888888"), "八阡八佰八拾八萬八阡八佰八拾八");
    assert_eq!(convert_number("90000009"), "九阡萬九");
    assert_eq!(convert_number("90009000"), "九阡萬九阡");
    assert_eq!(convert_number("90909090"), "九阡九拾萬九阡九拾");
    assert_eq!(convert_number("99999999"), "九阡九佰九拾九萬九阡九佰九拾九");
    assert_eq!(convert_number("100000000"), "壱億");
    assert_eq!(convert_number("100001001"), "壱億壱阡壱");
    assert_eq!(convert_number("100100100"), "壱億拾萬佰");
    assert_eq!(convert_number("111111111"), "壱億壱阡佰拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("200002002"), "弐億弐阡弐");
    assert_eq!(convert_number("200200200"), "弐億弐拾萬弐佰");
    assert_eq!(convert_number("222222222"), "弐億弐阡弐佰弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("300003003"), "参億参阡参");
    assert_eq!(convert_number("300300300"), "参億参拾萬参佰");
    assert_eq!(convert_number("333333333"), "参億参阡参佰参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("400004004"), "四億四阡四");
    assert_eq!(convert_number("400400400"), "四億四拾萬四佰");
    assert_eq!(convert_number("444444444"), "四億四阡四佰四拾四萬四阡四佰四拾四");
    assert_eq!(convert_number("500005005"), "伍億伍阡伍");
    assert_eq!(convert_number("500500500"), "伍億伍拾萬伍佰");
    assert_eq!(convert_number("555555555"), "伍億伍阡伍佰伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("600006006"), "六億六阡六");
    assert_eq!(convert_number("600600600"), "六億六拾萬六佰");
    assert_eq!(convert_number("666666666"), "六億六阡六佰六拾六萬六阡六佰六拾六");
    assert_eq!(convert_number("700007007"), "七億七阡七");
    assert_eq!(convert_number("700700700"), "七億七拾萬七佰");
    assert_eq!(convert_number("777777777"), "七億七阡七佰七拾七萬七阡七佰七拾七");
    assert_eq!(convert_number("800008008"), "八億八阡八");
    assert_eq!(convert_number("800800800"), "八億八拾萬八佰");
    assert_eq!(convert_number("888888888"), "八億八阡八佰八拾八萬八阡八佰八拾八");
    assert_eq!(convert_number("900009009"), "九億九阡九");
    assert_eq!(convert_number("900900900"), "九億九拾萬九佰");
    assert_eq!(convert_number("999999999"), "九億九阡九佰九拾九萬九阡九佰九拾九");
    assert_eq!(convert_number("1000000000"), "拾億");
    assert_eq!(convert_number("1000000001"), "拾億壱");
    assert_eq!(convert_number("1000010000"), "拾億壱萬");
    assert_eq!(convert_number("1010101010"), "拾億壱阡拾萬壱阡拾");
    assert_eq!(convert_number("1111111111"), "拾壱億壱阡佰拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("2000000002"), "弐拾億弐");
    assert_eq!(convert_number("2000020000"), "弐拾億弐萬");
    assert_eq!(convert_number("2020202020"), "弐拾億弐阡弐拾萬弐阡弐拾");
    assert_eq!(convert_number("2222222222"), "弐拾弐億弐阡弐佰弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("3000000003"), "参拾億参");
    assert_eq!(convert_number("3000030000"), "参拾億参萬");
    assert_eq!(convert_number("3030303030"), "参拾億参阡参拾萬参阡参拾");
    assert_eq!(convert_number("3333333333"), "参拾参億参阡参佰参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("4000000004"), "四拾億四");
    assert_eq!(convert_number("4000040000"), "四拾億四萬");
    assert_eq!(convert_number("4040404040"), "四拾億四阡四拾萬四阡四拾");
    assert_eq!(convert_number("4444444444"), "四拾四億四阡四佰四拾四萬四阡四佰四拾四");
    assert_eq!(convert_number("5000000005"), "伍拾億伍");
    assert_eq!(convert_number("5000050000"), "伍拾億伍萬");
    assert_eq!(convert_number("5050505050"), "伍拾億伍阡伍拾萬伍阡伍拾");
    assert_eq!(convert_number("5555555555"), "伍拾伍億伍阡伍佰伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("6000000006"), "六拾億六");
    assert_eq!(convert_number("6000060000"), "六拾億六萬");
    assert_eq!(convert_number("6060606060"), "六拾億六阡六拾萬六阡六拾");
    assert_eq!(convert_number("6666666666"), "六拾六億六阡六佰六拾六萬六阡六佰六拾六");
    assert_eq!(convert_number("7000000007"), "七拾億七");
    assert_eq!(convert_number("7000070000"), "七拾億七萬");
    assert_eq!(convert_number("7070707070"), "七拾億七阡七拾萬七阡七拾");
    assert_eq!(convert_number("7777777777"), "七拾七億七阡七佰七拾七萬七阡七佰七拾七");
    assert_eq!(convert_number("8000000008"), "八拾億八");
    assert_eq!(convert_number("8000080000"), "八拾億八萬");
    assert_eq!(convert_number("8080808080"), "八拾億八阡八拾萬八阡八拾");
    assert_eq!(convert_number("8888888888"), "八拾八億八阡八佰八拾八萬八阡八佰八拾八");
    assert_eq!(convert_number("9000000009"), "九拾億九");
    assert_eq!(convert_number("9000090000"), "九拾億九萬");
    assert_eq!(convert_number("9090909090"), "九拾億九阡九拾萬九阡九拾");
    assert_eq!(convert_number("9999999999"), "九拾九億九阡九佰九拾九萬九阡九佰九拾九");
    assert_eq!(convert_number("10000000000"), "佰億");
    assert_eq!(convert_number("11111111111"), "佰拾壱億壱阡佰拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("22222222222"), "弐佰弐拾弐億弐阡弐佰弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("33333333333"), "参佰参拾参億参阡参佰参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("44444444444"), "四佰四拾四億四阡四佰四拾四萬四阡四佰四拾四");
    assert_eq!(convert_number("55555555555"), "伍佰伍拾伍億伍阡伍佰伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("66666666666"), "六佰六拾六億六阡六佰六拾六萬六阡六佰六拾六");
    assert_eq!(convert_number("77777777777"), "七佰七拾七億七阡七佰七拾七萬七阡七佰七拾七");
    assert_eq!(convert_number("88888888888"), "八佰八拾八億八阡八佰八拾八萬八阡八佰八拾八");
    assert_eq!(convert_number("99999999999"), "九佰九拾九億九阡九佰九拾九萬九阡九佰九拾九");
    assert_eq!(convert_number("100000000000"), "壱阡億");
    assert_eq!(convert_number("100000010001"), "壱阡億壱萬壱");
    assert_eq!(convert_number("100000100000"), "壱阡億拾萬");
    assert_eq!(convert_number("100001001001"), "壱阡億佰萬壱阡壱");
    assert_eq!(convert_number("100010001000"), "壱阡億壱阡萬壱阡");
    assert_eq!(convert_number("100100100100"), "壱阡壱億拾萬佰");
    assert_eq!(convert_number("101010101010"), "壱阡拾億壱阡拾萬壱阡拾");
    assert_eq!(convert_number("111111111111"), "壱阡佰拾壱億壱阡佰拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("200000020002"), "弐阡億弐萬弐");
    assert_eq!(convert_number("200000200000"), "弐阡億弐拾萬");
    assert_eq!(convert_number("200002002002"), "弐阡億弐佰萬弐阡弐");
    assert_eq!(convert_number("200020002000"), "弐阡億弐阡萬弐阡");
    assert_eq!(convert_number("200200200200"), "弐阡弐億弐拾萬弐佰");
    assert_eq!(convert_number("202020202020"), "弐阡弐拾億弐阡弐拾萬弐阡弐拾");
    assert_eq!(convert_number("222222222222"), "弐阡弐佰弐拾弐億弐阡弐佰弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("300000030003"), "参阡億参萬参");
    assert_eq!(convert_number("300000300000"), "参阡億参拾萬");
    assert_eq!(convert_number("300003003003"), "参阡億参佰萬参阡参");
    assert_eq!(convert_number("300030003000"), "参阡億参阡萬参阡");
    assert_eq!(convert_number("300300300300"), "参阡参億参拾萬参佰");
    assert_eq!(convert_number("303030303030"), "参阡参拾億参阡参拾萬参阡参拾");
    assert_eq!(convert_number("333333333333"), "参阡参佰参拾参億参阡参佰参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("400000040004"), "四阡億四萬四");
    assert_eq!(convert_number("400000400000"), "四阡億四拾萬");
    assert_eq!(convert_number("400004004004"), "四阡億四佰萬四阡四");
    assert_eq!(convert_number("400040004000"), "四阡億四阡萬四阡");
    assert_eq!(convert_number("400400400400"), "四阡四億四拾萬四佰");
    assert_eq!(convert_number("404040404040"), "四阡四拾億四阡四拾萬四阡四拾");
    assert_eq!(convert_number("444444444444"), "四阡四佰四拾四億四阡四佰四拾四萬四阡四佰四拾四");
    assert_eq!(convert_number("500000050005"), "伍阡億伍萬伍");
    assert_eq!(convert_number("500000500000"), "伍阡億伍拾萬");
    assert_eq!(convert_number("500005005005"), "伍阡億伍佰萬伍阡伍");
    assert_eq!(convert_number("500050005000"), "伍阡億伍阡萬伍阡");
    assert_eq!(convert_number("500500500500"), "伍阡伍億伍拾萬伍佰");
    assert_eq!(convert_number("505050505050"), "伍阡伍拾億伍阡伍拾萬伍阡伍拾");
    assert_eq!(convert_number("555555555555"), "伍阡伍佰伍拾伍億伍阡伍佰伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("600000060006"), "六阡億六萬六");
    assert_eq!(convert_number("600000600000"), "六阡億六拾萬");
    assert_eq!(convert_number("600006006006"), "六阡億六佰萬六阡六");
    assert_eq!(convert_number("600060006000"), "六阡億六阡萬六阡");
    assert_eq!(convert_number("600600600600"), "六阡六億六拾萬六佰");
    assert_eq!(convert_number("606060606060"), "六阡六拾億六阡六拾萬六阡六拾");
    assert_eq!(convert_number("666666666666"), "六阡六佰六拾六億六阡六佰六拾六萬六阡六佰六拾六");
    assert_eq!(convert_number("700000070007"), "七阡億七萬七");
    assert_eq!(convert_number("700000700000"), "七阡億七拾萬");
    assert_eq!(convert_number("700007007007"), "七阡億七佰萬七阡七");
    assert_eq!(convert_number("700070007000"), "七阡億七阡萬七阡");
    assert_eq!(convert_number("700700700700"), "七阡七億七拾萬七佰");
    assert_eq!(convert_number("707070707070"), "七阡七拾億七阡七拾萬七阡七拾");
    assert_eq!(convert_number("777777777777"), "七阡七佰七拾七億七阡七佰七拾七萬七阡七佰七拾七");
    assert_eq!(convert_number("800000080008"), "八阡億八萬八");
    assert_eq!(convert_number("800000800000"), "八阡億八拾萬");
    assert_eq!(convert_number("800008008008"), "八阡億八佰萬八阡八");
    assert_eq!(convert_number("800080008000"), "八阡億八阡萬八阡");
    assert_eq!(convert_number("800800800800"), "八阡八億八拾萬八佰");
    assert_eq!(convert_number("808080808080"), "八阡八拾億八阡八拾萬八阡八拾");
    assert_eq!(convert_number("888888888888"), "八阡八佰八拾八億八阡八佰八拾八萬八阡八佰八拾八");
    assert_eq!(convert_number("900000090009"), "九阡億九萬九");
    assert_eq!(convert_number("900000900000"), "九阡億九拾萬");
    assert_eq!(convert_number("900009009009"), "九阡億九佰萬九阡九");
    assert_eq!(convert_number("900090009000"), "九阡億九阡萬九阡");
    assert_eq!(convert_number("900900900900"), "九阡九億九拾萬九佰");
    assert_eq!(convert_number("909090909090"), "九阡九拾億九阡九拾萬九阡九拾");
    assert_eq!(convert_number("999999999999"), "九阡九佰九拾九億九阡九佰九拾九萬九阡九佰九拾九");
    assert_eq!(convert_number("1000000000000"), "壱兆");
    assert_eq!(convert_number("1111111111111"), "壱兆壱阡佰拾壱億壱阡佰拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("2222222222222"), "弐兆弐阡弐佰弐拾弐億弐阡弐佰弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("3333333333333"), "参兆参阡参佰参拾参億参阡参佰参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("4444444444444"), "四兆四阡四佰四拾四億四阡四佰四拾四萬四阡四佰四拾四");
    assert_eq!(convert_number("5555555555555"), "伍兆伍阡伍佰伍拾伍億伍阡伍佰伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("6666666666666"), "六兆六阡六佰六拾六億六阡六佰六拾六萬六阡六佰六拾六");
    assert_eq!(convert_number("7777777777777"), "七兆七阡七佰七拾七億七阡七佰七拾七萬七阡七佰七拾七");
    assert_eq!(convert_number("8888888888888"), "八兆八阡八佰八拾八億八阡八佰八拾八萬八阡八佰八拾八");
    assert_eq!(convert_number("9999999999999"), "九兆九阡九佰九拾九億九阡九佰九拾九萬九阡九佰九拾九");
    assert_eq!(convert_number("10000000000000"), "拾兆");
    assert_eq!(convert_number("10101010101010"), "拾兆壱阡拾億壱阡拾萬壱阡拾");
    assert_eq!(convert_number("11111111111111"), "拾壱兆壱阡佰拾壱億壱阡佰拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("20202020202020"), "弐拾兆弐阡弐拾億弐阡弐拾萬弐阡弐拾");
    assert_eq!(convert_number("22222222222222"), "弐拾弐兆弐阡弐佰弐拾弐億弐阡弐佰弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("30303030303030"), "参拾兆参阡参拾億参阡参拾萬参阡参拾");
    assert_eq!(convert_number("33333333333333"), "参拾参兆参阡参佰参拾参億参阡参佰参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("40404040404040"), "四拾兆四阡四拾億四阡四拾萬四阡四拾");
    assert_eq!(convert_number("44444444444444"), "四拾四兆四阡四佰四拾四億四阡四佰四拾四萬四阡四佰四拾四");
    assert_eq!(convert_number("50505050505050"), "伍拾兆伍阡伍拾億伍阡伍拾萬伍阡伍拾");
    assert_eq!(convert_number("55555555555555"), "伍拾伍兆伍阡伍佰伍拾伍億伍阡伍佰伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("60606060606060"), "六拾兆六阡六拾億六阡六拾萬六阡六拾");
    assert_eq!(convert_number("66666666666666"), "六拾六兆六阡六佰六拾六億六阡六佰六拾六萬六阡六佰六拾六");
    assert_eq!(convert_number("70707070707070"), "七拾兆七阡七拾億七阡七拾萬七阡七拾");
    assert_eq!(convert_number("77777777777777"), "七拾七兆七阡七佰七拾七億七阡七佰七拾七萬七阡七佰七拾七");
    assert_eq!(convert_number("80808080808080"), "八拾兆八阡八拾億八阡八拾萬八阡八拾");
    assert_eq!(convert_number("88888888888888"), "八拾八兆八阡八佰八拾八億八阡八佰八拾八萬八阡八佰八拾八");
    assert_eq!(convert_number("90909090909090"), "九拾兆九阡九拾億九阡九拾萬九阡九拾");
    assert_eq!(convert_number("99999999999999"), "九拾九兆九阡九佰九拾九億九阡九佰九拾九萬九阡九佰九拾九");
    assert_eq!(convert_number("100000000000000"), "佰兆");
    assert_eq!(convert_number("100000000100001"), "佰兆拾萬壱");
    assert_eq!(convert_number("100001000010000"), "佰兆拾億壱萬");
    assert_eq!(convert_number("100001001001001"), "佰兆拾億佰萬壱阡壱");
    assert_eq!(convert_number("100100100100100"), "佰兆壱阡壱億拾萬佰");
    assert_eq!(convert_number("111111111111111"), "佰拾壱兆壱阡佰拾壱億壱阡佰拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("200000000200002"), "弐佰兆弐拾萬弐");
    assert_eq!(convert_number("200002000020000"), "弐佰兆弐拾億弐萬");
    assert_eq!(convert_number("200002002002002"), "弐佰兆弐拾億弐佰萬弐阡弐");
    assert_eq!(convert_number("200200200200200"), "弐佰兆弐阡弐億弐拾萬弐佰");
    assert_eq!(convert_number("222222222222222"), "弐佰弐拾弐兆弐阡弐佰弐拾弐億弐阡弐佰弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("300000000300003"), "参佰兆参拾萬参");
    assert_eq!(convert_number("300003000030000"), "参佰兆参拾億参萬");
    assert_eq!(convert_number("300003003003003"), "参佰兆参拾億参佰萬参阡参");
    assert_eq!(convert_number("300300300300300"), "参佰兆参阡参億参拾萬参佰");
    assert_eq!(convert_number("333333333333333"), "参佰参拾参兆参阡参佰参拾参億参阡参佰参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("400000000400004"), "四佰兆四拾萬四");
    assert_eq!(convert_number("400004000040000"), "四佰兆四拾億四萬");
    assert_eq!(convert_number("400004004004004"), "四佰兆四拾億四佰萬四阡四");
    assert_eq!(convert_number("400400400400400"), "四佰兆四阡四億四拾萬四佰");
    assert_eq!(convert_number("444444444444444"), "四佰四拾四兆四阡四佰四拾四億四阡四佰四拾四萬四阡四佰四拾四");
    assert_eq!(convert_number("500000000500005"), "伍佰兆伍拾萬伍");
    assert_eq!(convert_number("500005000050000"), "伍佰兆伍拾億伍萬");
    assert_eq!(convert_number("500005005005005"), "伍佰兆伍拾億伍佰萬伍阡伍");
    assert_eq!(convert_number("500500500500500"), "伍佰兆伍阡伍億伍拾萬伍佰");
    assert_eq!(convert_number("555555555555555"), "伍佰伍拾伍兆伍阡伍佰伍拾伍億伍阡伍佰伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("600000000600006"), "六佰兆六拾萬六");
    assert_eq!(convert_number("600006000060000"), "六佰兆六拾億六萬");
    assert_eq!(convert_number("600006006006006"), "六佰兆六拾億六佰萬六阡六");
    assert_eq!(convert_number("600600600600600"), "六佰兆六阡六億六拾萬六佰");
    assert_eq!(convert_number("666666666666666"), "六佰六拾六兆六阡六佰六拾六億六阡六佰六拾六萬六阡六佰六拾六");
    assert_eq!(convert_number("700000000700007"), "七佰兆七拾萬七");
    assert_eq!(convert_number("700007000070000"), "七佰兆七拾億七萬");
    assert_eq!(convert_number("700007007007007"), "七佰兆七拾億七佰萬七阡七");
    assert_eq!(convert_number("700700700700700"), "七佰兆七阡七億七拾萬七佰");
    assert_eq!(convert_number("777777777777777"), "七佰七拾七兆七阡七佰七拾七億七阡七佰七拾七萬七阡七佰七拾七");
    assert_eq!(convert_number("800000000800008"), "八佰兆八拾萬八");
    assert_eq!(convert_number("800008000080000"), "八佰兆八拾億八萬");
    assert_eq!(convert_number("800008008008008"), "八佰兆八拾億八佰萬八阡八");
    assert_eq!(convert_number("800800800800800"), "八佰兆八阡八億八拾萬八佰");
    assert_eq!(convert_number("888888888888888"), "八佰八拾八兆八阡八佰八拾八億八阡八佰八拾八萬八阡八佰八拾八");
    assert_eq!(convert_number("900000000900009"), "九佰兆九拾萬九");
    assert_eq!(convert_number("900009000090000"), "九佰兆九拾億九萬");
    assert_eq!(convert_number("900009009009009"), "九佰兆九拾億九佰萬九阡九");
    assert_eq!(convert_number("900900900900900"), "九佰兆九阡九億九拾萬九佰");
    assert_eq!(convert_number("999999999999999"), "九佰九拾九兆九阡九佰九拾九億九阡九佰九拾九萬九阡九佰九拾九");
    assert_eq!(convert_number("1000000000000000"), "壱阡兆");
    assert_eq!(convert_number("1000000100010001"), "壱阡兆壱億壱萬壱");
    assert_eq!(convert_number("1000100010001000"), "壱阡兆壱阡億壱阡萬壱阡");
    assert_eq!(convert_number("1010101010101010"), "壱阡拾兆壱阡拾億壱阡拾萬壱阡拾");
    assert_eq!(convert_number("1111111111111111"), "壱阡佰拾壱兆壱阡佰拾壱億壱阡佰拾壱萬壱阡佰拾壱");
    assert_eq!(convert_number("2000000200020002"), "弐阡兆弐億弐萬弐");
    assert_eq!(convert_number("2000200020002000"), "弐阡兆弐阡億弐阡萬弐阡");
    assert_eq!(convert_number("2020202020202020"), "弐阡弐拾兆弐阡弐拾億弐阡弐拾萬弐阡弐拾");
    assert_eq!(convert_number("2222222222222222"), "弐阡弐佰弐拾弐兆弐阡弐佰弐拾弐億弐阡弐佰弐拾弐萬弐阡弐佰弐拾弐");
    assert_eq!(convert_number("3000000300030003"), "参阡兆参億参萬参");
    assert_eq!(convert_number("3000300030003000"), "参阡兆参阡億参阡萬参阡");
    assert_eq!(convert_number("3030303030303030"), "参阡参拾兆参阡参拾億参阡参拾萬参阡参拾");
    assert_eq!(convert_number("3333333333333333"), "参阡参佰参拾参兆参阡参佰参拾参億参阡参佰参拾参萬参阡参佰参拾参");
    assert_eq!(convert_number("4000000400040004"), "四阡兆四億四萬四");
    assert_eq!(convert_number("4000400040004000"), "四阡兆四阡億四阡萬四阡");
    assert_eq!(convert_number("4040404040404040"), "四阡四拾兆四阡四拾億四阡四拾萬四阡四拾");
    assert_eq!(convert_number("4444444444444444"), "四阡四佰四拾四兆四阡四佰四拾四億四阡四佰四拾四萬四阡四佰四拾四");
    assert_eq!(convert_number("5000000500050005"), "伍阡兆伍億伍萬伍");
    assert_eq!(convert_number("5000500050005000"), "伍阡兆伍阡億伍阡萬伍阡");
    assert_eq!(convert_number("5050505050505050"), "伍阡伍拾兆伍阡伍拾億伍阡伍拾萬伍阡伍拾");
    assert_eq!(convert_number("5555555555555555"), "伍阡伍佰伍拾伍兆伍阡伍佰伍拾伍億伍阡伍佰伍拾伍萬伍阡伍佰伍拾伍");
    assert_eq!(convert_number("6000000600060006"), "六阡兆六億六萬六");
    assert_eq!(convert_number("6000600060006000"), "六阡兆六阡億六阡萬六阡");
    assert_eq!(convert_number("6060606060606060"), "六阡六拾兆六阡六拾億六阡六拾萬六阡六拾");
    assert_eq!(convert_number("6666666666666666"), "六阡六佰六拾六兆六阡六佰六拾六億六阡六佰六拾六萬六阡六佰六拾六");
    assert_eq!(convert_number("7000000700070007"), "七阡兆七億七萬七");
    assert_eq!(convert_number("7000700070007000"), "七阡兆七阡億七阡萬七阡");
    assert_eq!(convert_number("7070707070707070"), "七阡七拾兆七阡七拾億七阡七拾萬七阡七拾");
    assert_eq!(convert_number("7777777777777777"), "七阡七佰七拾七兆七阡七佰七拾七億七阡七佰七拾七萬七阡七佰七拾七");
    assert_eq!(convert_number("8000000800080008"), "八阡兆八億八萬八");
    assert_eq!(convert_number("8000800080008000"), "八阡兆八阡億八阡萬八阡");
    assert_eq!(convert_number("8080808080808080"), "八阡八拾兆八阡八拾億八阡八拾萬八阡八拾");
    assert_eq!(convert_number("8888888888888888"), "八阡八佰八拾八兆八阡八佰八拾八億八阡八佰八拾八萬八阡八佰八拾八");
    assert_eq!(convert_number("9000000900090009"), "九阡兆九億九萬九");
    assert_eq!(convert_number("9000900090009000"), "九阡兆九阡億九阡萬九阡");
    assert_eq!(convert_number("9090909090909090"), "九阡九拾兆九阡九拾億九阡九拾萬九阡九拾");
    assert_eq!(convert_number("9999999999999999"), "九阡九佰九拾九兆九阡九佰九拾九億九阡九佰九拾九萬九阡九佰九拾九");
}